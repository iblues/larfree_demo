<?php

namespace Tests\Feature;

use App\Models\Common\CommonUser;
use Iblues\AnnotationTestUnit\Traits\ApiTest;
use Illuminate\Database\Connection;
use Illuminate\Database\DatabaseManager;
use Illuminate\Foundation\Testing\DatabaseTransactions;
use Illuminate\Support\Facades\Facade;
use Larfree\Models\Test\TestTest;
use Tests\Api\Connect;
use Tests\TestCase;

/**
 * 测试标记了@ATU|now的模块
 * @package Tests\Feature
 */
class AnnotationTest extends TestCase
{
    //DatabaseTransactions自动开启事务. 这样不会写入数据库. 但是注意!事务外的应用读不起到数据库的写入值.
    //PS: 如果开启事务后仍有数据写入.那么说明在代码中你使用了手动事务并且\DB::beginTransaion()比\DB::commit()少了一个.导致事务拦截失效
    //解决办法.在parent::setUp();后面多写几个\DB::beginTransaion(). 让事务始终比commit多.
    use ApiTest, DatabaseTransactions;

    public $cache = false;
    /**
     * use for login
     * @var strin
     */
    protected $userModel = CommonUser::class;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
    }



    /**
     * 读取所有带有@ATU\Api主键的,看是否有对应的路由匹配. 如果没有匹配路由就报错. 可用@ignore暂时忽略
     * @author Blues
     */
    public function testRouter(){
        $this->checkRouter();
    }

    /**
     * 测试带有@ATU\Api和@ATU\Now注解的
     * @author Blues
     *
     */
    public function testNow()
    {
        $this->doNow();
    }

    /**
     * 测试带有@ATU\Api()注解的
     * @author Blues
     */
    public function testAll()
    {
        $this->doAll();
    }
    /**
     * @author Blues
     *
     */
    public function createUser()
    {
        $user = [
            'password' => $this->getPassword(),
            'email' => $this->getRandEmail(),
            'phone' => $this->getRandPhone(),
            'name' => '测试',
        ];
        $model = $this->userModel::firstOrCreate($user);
        $this->setParam('user',$model);
    }

    /**
     * @author Blues
     *
     */
    public function createTest()
    {
        $user = [
            'title' => '测试2',
        ];
        $model = TestTest::firstOrCreate($user);
        $this->setParam('test',$model);
    }


}
